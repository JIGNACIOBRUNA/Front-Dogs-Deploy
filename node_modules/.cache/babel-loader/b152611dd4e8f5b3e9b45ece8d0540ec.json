{"ast":null,"code":"import { CURRENT_PAGE, DETAIL_DOG, ADD_TEMPERAMENTS, FILTER_BY_TEMPERAMENTS, GET_ALL_BREED, GET_NAME_DOG, FILTER_BY_ORIGIN, ORDER_BY_NAME, ORDER_BY_WEIGHT, CREATE_BREED } from \"./actionTypes\";\nconst initialState = {\n  currentPage: 1,\n  dog: [],\n  detail: [],\n  temperament: [],\n  dogFilter: [] // estado donde se van a guardar los perros filtrados\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_BREED:\n      return {\n        ...state,\n        dog: action.payload,\n        dogFilter: action.payload\n      };\n    //se actualizan ambas propiedades con la misma info\n\n    case GET_NAME_DOG:\n      return {\n        ...state,\n        dog: action.payload,\n        dogFilter: action.payload\n      };\n    case DETAIL_DOG:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case ADD_TEMPERAMENTS:\n      return {\n        ...state,\n        temperament: action.payload\n      };\n    case FILTER_BY_TEMPERAMENTS:\n      const dogFilter = state.dogFilter; // aplicamos el filtro solo a dogFilter \n      const filterXTemperament = action.payload === \"all\" ? dogFilter : dogFilter.filter(d => {\n        var _d$temperament;\n        return (_d$temperament = d.temperament) === null || _d$temperament === void 0 ? void 0 : _d$temperament.includes(action.payload);\n      });\n      return {\n        ...state,\n        dog: filterXTemperament\n      };\n    case FILTER_BY_ORIGIN:\n      const allDogs = state.dogFilter;\n      let filterByOrigin;\n      if (action.payload === \"all\") {\n        filterByOrigin = allDogs;\n      } else if (action.payload === \"created\") {\n        filterByOrigin = allDogs.filter(dog => dog.id.length === 36);\n      } else {\n        filterByOrigin = allDogs.filter(dog => !isNaN(dog.id));\n      }\n      return {\n        ...state,\n        dog: filterByOrigin\n      };\n    case ORDER_BY_NAME:\n      if (state.dogFilter === \"No Dog\") return {\n        ...state\n      };\n      const orderByName = action.payload === \"asc\" ? state.dogFilter.slice().sort((a, b) => {\n        if (a.name > b.name) return 1;\n        if (a.name < b.name) return -1;\n        return 0;\n      }) : state.dogFilter.slice().sort((a, b) => {\n        if (a.name > b.name) return -1;\n        if (a.name < b.name) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        dog: orderByName\n      };\n    case ORDER_BY_WEIGHT:\n      if (state.dogFilter === \"No Dog\") return {\n        ...state\n      };\n      const orderByWeight = action.payload === \"menor\" ? state.dogFilter.slice().sort((a, b) => parseFloat(a.weight.metric) - parseFloat(b.weight.metric)) : state.dogFilter.slice().sort((a, b) => parseFloat(b.weight.metric) - parseFloat(a.weight.metric));\n      return {\n        ...state,\n        dog: orderByWeight\n      };\n    case CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload\n      };\n    case CREATE_BREED:\n      return {\n        ...state,\n        dogFilter: action.payload\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["CURRENT_PAGE","DETAIL_DOG","ADD_TEMPERAMENTS","FILTER_BY_TEMPERAMENTS","GET_ALL_BREED","GET_NAME_DOG","FILTER_BY_ORIGIN","ORDER_BY_NAME","ORDER_BY_WEIGHT","CREATE_BREED","initialState","currentPage","dog","detail","temperament","dogFilter","rootReducer","state","action","type","payload","filterXTemperament","filter","d","_d$temperament","includes","allDogs","filterByOrigin","id","length","isNaN","orderByName","slice","sort","a","b","name","orderByWeight","parseFloat","weight","metric"],"sources":["C:/Users/Usuario/Desktop/Workspace/PI-DOGS-DEPLOY/client/src/redux/reducer.js"],"sourcesContent":["import { CURRENT_PAGE, DETAIL_DOG, ADD_TEMPERAMENTS, FILTER_BY_TEMPERAMENTS, GET_ALL_BREED, GET_NAME_DOG, FILTER_BY_ORIGIN, ORDER_BY_NAME, ORDER_BY_WEIGHT, CREATE_BREED } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    currentPage: 1,\r\n    dog: [],\r\n    detail: [],\r\n    temperament: [],\r\n    dogFilter: [], // estado donde se van a guardar los perros filtrados\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_BREED:\r\n            return { ...state, dog: action.payload, dogFilter: action.payload }; //se actualizan ambas propiedades con la misma info\r\n\r\n        case GET_NAME_DOG:\r\n            return { ...state, dog: action.payload, dogFilter: action.payload };\r\n\r\n        case DETAIL_DOG:\r\n            return { ...state, detail: action.payload };\r\n\r\n        case ADD_TEMPERAMENTS:\r\n            return { ...state, temperament: action.payload };\r\n\r\n        case FILTER_BY_TEMPERAMENTS:\r\n            const dogFilter = state.dogFilter; // aplicamos el filtro solo a dogFilter \r\n            const filterXTemperament = action.payload === \"all\" ? dogFilter : dogFilter.filter((d) => d.temperament?.includes(action.payload));\r\n            return { ...state, dog: filterXTemperament };\r\n\r\n        case FILTER_BY_ORIGIN:\r\n            const allDogs = state.dogFilter;\r\n            let filterByOrigin;\r\n            if (action.payload === \"all\") {\r\n                filterByOrigin = allDogs;\r\n            } else if (action.payload === \"created\") {\r\n                filterByOrigin = allDogs.filter((dog) => dog.id.length === 36);\r\n            } else {\r\n                filterByOrigin = allDogs.filter((dog) => !isNaN(dog.id));\r\n            }\r\n            return { ...state, dog: filterByOrigin };\r\n\r\n        case ORDER_BY_NAME:\r\n            if (state.dogFilter === \"No Dog\") return { ...state };\r\n            const orderByName = action.payload === \"asc\" ?\r\n                state.dogFilter.slice().sort((a, b) => {\r\n                    if (a.name > b.name) return 1;\r\n                    if (a.name < b.name) return -1;\r\n                    return 0;\r\n                })\r\n                : state.dogFilter.slice().sort((a, b) => {\r\n                    if (a.name > b.name) return -1;\r\n                    if (a.name < b.name) return 1;\r\n                    return 0;\r\n                });\r\n            return { ...state, dog: orderByName }\r\n\r\n        case ORDER_BY_WEIGHT:\r\n            if (state.dogFilter === \"No Dog\") return { ...state };\r\n            const orderByWeight = action.payload === \"menor\" ?\r\n                state.dogFilter.slice().sort((a, b) => parseFloat(a.weight.metric) - parseFloat(b.weight.metric))\r\n                : state.dogFilter.slice().sort((a, b) => parseFloat(b.weight.metric) - parseFloat(a.weight.metric));\r\n            return { ...state, dog: orderByWeight };\r\n\r\n        case CURRENT_PAGE:\r\n            return { ...state, currentPage: action.payload };\r\n\r\n        case CREATE_BREED:\r\n            return { ...state, dogFilter: action.payload }; \r\n\r\n        default:\r\n            return { ...state }\r\n\r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}